/*
 * Copyright 2018 The BookLab Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java"
    id "com.moowork.node" version "1.2.0"
}

/* Configure node plugin to use virtual distribution */
node {
    version = '8.11.1'
    download = true
}

/* Angular build tasks */
task compileAngular (type : NpmTask) {
    inputs.file("package-lock.json").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("src/main/webapp").withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.dir("$buildDir/angular")
    dependsOn npmInstall
    args = ['run', 'build']
}

jar {
    dependsOn compileAngular
    from ("${buildDir}/angular") {
        into('META-INF/resources/')
    }
}

// XXX We do not bind the testAngular task to the test task for now since it requires
// XXX a running browser.
task testAngular (type : NpmTask) {
    inputs.file("package-lock.json").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("src/main/webapp").withPathSensitivity(PathSensitivity.RELATIVE)
    dependsOn npmInstall
    args = ['run', 'test']
}

task lintAngular (type : NpmTask) {
    inputs.dir("src/main/webapp").withPathSensitivity(PathSensitivity.RELATIVE)
    dependsOn npmInstall
    args = ['run', 'lint']
}

check.dependsOn lintAngular

task run (type : NpmTask) {
    args = ['run', 'start']
}

/* Fix for https://github.com/srs/gradle-node-plugin/issues/243 */
afterEvaluate {
    Map environment = [:] << System.getenv()
    environment.PATH = "${node.variant.nodeBinDir}:${environment.PATH}"
    npmInstall.environment = environment
}

/* Project configuration */
version = '1.0'
