var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.332,1,0.767]],["body/components/AppComponent.html",[0,0.579,1,1.34,2,0.443,3,0.371,4,1.217,5,1.217,6,1.217,7,0.303,8,1.96,9,1.217,10,2.386,11,2.077,12,3.419,13,1.704,14,3.419,15,1.704,16,3.419,17,0.371,18,1.129,19,1.228,20,1.129,21,2.272,22,4.274,23,0.522,24,2.442,25,5.028,26,1.134,27,3.419,28,3.419,29,1.303,30,0.925,31,0.054,32,0.981,33,0.73,34,0.925,35,0.702,36,2.3,37,2.745,38,3.431,39,2.745,40,2.442,41,2.745,42,1.129,43,3.419,44,1.295,45,3.419,46,0.522,47,0.925,48,1.295,49,1.643,50,1.06,51,2.3,52,0.716,53,0.607,54,3.419,55,1.217,56,1.406,57,1.406,58,1.643,59,2.442,60,0.371,61,0.24,62,2.442,63,0.702,64,1.217,65,2.442,66,2.442,67,2.442,68,2.442,69,2.442,70,2.442,71,2.442,72,2.442,73,1.406,74,2.442,75,2.442,76,1.643,77,0.925,78,1.704,79,1.704,80,1.704,81,2.13,82,1.217,83,1.217,84,0.702,85,1.217,86,0.702,87,1.217,88,0.702,89,1.217,90,0.702,91,1.217,92,1.217,93,0.033,94,0.033]],["title/modules/AppModule.html",[95,1.331,96,1.538]],["body/modules/AppModule.html",[0,0.433,1,1.468,2,0.456,3,0.381,7,0.312,31,0.054,52,0.948,53,0.625,55,1.251,56,1.446,57,1.446,60,0.381,77,0.951,84,1.386,86,1.352,88,1.386,90,1.352,93,0.034,94,0.034,95,1.737,96,3.065,97,1.446,98,3.214,99,2.346,100,2.346,101,2.016,102,2.016,103,2.016,104,2.016,105,1.501,106,1.721,107,2.798,108,2.016,109,1.689,110,2.511,111,3.486,112,2.016,113,1.689,114,3.486,115,3.486,116,2.016,117,2.511,118,2.491,119,2.016,120,3.486,121,1.689,122,2.511,123,1.689,124,1.689,125,2.511,126,2.511,127,1.689,128,2.511,129,2.511,130,2.511,131,2.511,132,1.251,133,3.486,134,1.251,135,2.511,136,2.511,137,1.446]],["title/classes/Book.html",[61,0.263,138,0.57]],["body/classes/Book.html",[2,0.357,3,0.298,7,0.244,17,0.298,18,0.965,19,1.489,20,0.965,23,0.825,26,1.288,29,1.43,30,1.107,31,0.054,32,0.727,33,0.984,34,1.107,35,0.84,42,1.481,44,0.744,46,1.023,48,1.979,49,1.322,50,1.514,52,0.357,60,0.529,61,0.426,63,1.288,93,0.042,94,0.029,132,0.979,138,1.121,139,1.132,140,1.739,141,2.452,142,2.581,143,3.016,144,2.348,145,2.923,146,2.6,147,1.965,148,1.639,149,1.965,150,1.965,151,1.965,152,1.268,153,1.965,154,1.965,155,1.967,156,1.965,157,1.457,158,2.6,159,1.683,160,1.683,161,1.965,162,1.463,163,2.912,164,1.967,165,1.967,166,1.322,167,1.322,168,1.967,169,1.322,170,1.322,171,1.322,172,0.853,173,1.322,174,1.322,175,1.322,176,1.322,177,0.853,178,1.322,179,1.322,180,1.322,181,1.322,182,1.322,183,0.727,184,1.322,185,1.322,186,0.744]],["title/components/BookshelfComponent.html",[0,0.332,84,0.767]],["body/components/BookshelfComponent.html",[0,0.545,1,0.531,2,0.336,3,0.281,4,0.922,5,0.922,6,0.922,7,0.23,9,0.922,10,2.189,11,1.906,13,1.392,15,1.392,17,0.281,18,0.922,19,0.967,20,0.922,21,1.065,23,0.719,26,1.3,30,1.057,31,0.054,32,0.932,33,0.904,34,1.057,35,0.531,42,1.238,44,1.057,46,0.719,47,1.274,48,1.602,52,0.68,53,0.46,60,0.281,61,0.182,63,0.967,64,0.922,73,2.529,77,0.7,78,1.392,79,1.392,80,1.392,81,1.868,82,0.922,83,0.922,84,1.077,85,0.922,86,0.531,87,0.922,88,0.531,89,0.922,90,0.531,91,0.922,92,0.922,93,0.027,94,0.027,105,1.329,106,1.523,123,1.244,124,1.244,134,2.472,137,1.065,138,1.13,141,2.42,148,1.274,152,1.212,159,1.065,162,1.057,172,1.212,187,1.484,188,1.608,189,1.937,190,2.792,191,2.792,192,2.522,193,3.748,194,2.522,195,2.242,196,3.009,197,2.158,198,1.849,199,2.158,200,2.792,201,1.608,202,2.242,203,2.242,204,1.849,205,2.522,206,1.849,207,2.792,208,2.792,209,1.879,210,1.849,211,1.849,212,1.849,213,1.849,214,0.922,215,1.849,216,1.849,217,2.792,218,1.849,219,1.849,220,1.849,221,1.849,222,1.849,223,1.849,224,1.849,225,3.748,226,1.849,227,2.242,228,2.792,229,2.242,230,1.608,231,2.792,232,2.242,233,2.792,234,1.849]],["title/interfaces/DetectionResult.html",[183,0.664,186,1.011]],["body/interfaces/DetectionResult.html",[2,0.442,3,0.37,7,0.303,17,0.37,18,1.128,19,1.426,23,0.729,29,1.41,31,0.055,33,0.842,35,0.7,42,1.128,44,1.293,46,1.022,48,1.924,50,1.481,52,0.442,60,0.598,61,0.42,63,1.375,93,0.048,94,0.033,132,1.214,138,1.118,139,1.403,140,1.701,141,2.128,142,1.966,143,2.297,144,1.64,146,1.64,148,1.293,152,1.057,155,1.64,157,1.214,158,2.297,159,1.403,160,1.403,162,1.293,163,2.873,164,1.64,165,1.64,166,1.64,167,1.64,168,2.297,169,1.64,170,1.64,171,1.64,172,1.057,173,1.64,174,1.64,175,1.64,176,1.64,177,1.057,178,1.64,179,1.64,180,1.64,181,1.64,182,1.64,183,1.062,184,2.297,185,2.297,186,1.293]],["title/components/HeaderComponent.html",[0,0.332,86,0.767]],["body/components/HeaderComponent.html",[0,0.613,1,0.853,2,0.538,3,0.45,4,1.479,5,1.479,6,1.479,7,0.368,9,1.479,10,2.51,11,2.185,13,1.945,15,1.945,17,0.45,20,1.289,23,1.028,26,1.122,31,0.054,32,0.971,46,0.634,47,1.124,51,2.626,52,0.538,53,0.738,60,0.45,61,0.384,77,1.124,78,1.945,79,1.945,80,1.945,81,2.309,82,1.479,83,1.479,84,0.853,85,1.479,86,1.42,87,1.479,88,0.853,89,1.479,90,0.853,91,1.479,92,1.479,93,0.038,94,0.038,188,2.248,189,2.511,197,2.668,235,2.382,236,4.361,237,3.903,238,3.903,239,2.968,240,2.968]],["title/injectables/HttpService.html",[105,0.882,241,1.011]],["body/injectables/HttpService.html",[2,0.423,3,0.354,7,0.29,17,0.354,19,0.952,20,1.094,23,0.822,26,1.204,30,1.457,31,0.054,32,0.957,33,0.822,34,1.457,35,0.671,36,2.228,42,1.271,44,0.884,46,1.009,47,0.884,48,1.828,52,0.76,53,0.581,60,0.354,61,0.23,63,1.204,64,1.163,93,0.045,94,0.032,105,1.384,121,1.57,138,0.707,140,1.163,148,0.884,157,1.65,162,1.254,172,1.437,183,0.824,186,0.884,192,2.976,194,2.59,196,2.658,199,2.547,201,1.907,214,1.163,230,1.907,241,1.457,242,1.57,243,2.228,244,2.658,245,3.351,246,3.363,247,3.311,248,1.873,249,3.551,250,2.334,251,2.334,252,2.228,253,2.228,254,2.658,255,2.334,256,3.18,257,2.658,258,3.363,259,2.334,260,1.907,261,2.818,262,2.59,263,1.57,264,1.873,265,1.873,266,2.216,267,1.873,268,1.873,269,1.873,270,1.873]],["title/components/ImageUploadComponent.html",[0,0.332,88,0.767]],["body/components/ImageUploadComponent.html",[0,0.501,1,0.472,2,0.298,3,0.249,4,0.818,5,0.818,6,0.818,7,0.316,9,0.818,10,2.099,11,1.828,13,1.271,15,1.271,17,0.249,18,0.842,20,0.842,21,0.946,23,0.668,26,1.251,29,0.542,30,1.334,31,0.054,32,1.004,33,0.862,34,1.334,35,0.733,46,0.753,47,1.334,52,0.639,53,0.408,60,0.249,61,0.251,63,1.096,64,0.818,73,2.029,77,0.622,78,1.271,79,1.756,80,1.271,81,1.756,82,0.818,83,0.818,84,0.472,85,0.818,86,0.472,87,0.818,88,1.16,89,0.818,90,0.472,91,0.818,92,0.818,93,0.039,94,0.025,105,1.26,106,1.444,123,1.105,124,1.105,127,3.009,132,1.271,134,2.099,137,0.946,138,1.084,141,2.228,148,1.183,152,1.106,160,1.468,177,1.106,188,1.468,189,1.8,195,2.047,197,2.029,199,1.8,201,0.946,202,2.047,203,2.047,205,2.37,209,2.566,214,0.818,227,2.047,229,3.24,230,2.843,245,1.715,248,1.318,260,1.468,261,1.715,262,2.37,271,3.589,272,1.318,273,2.549,274,2.549,275,3.523,276,2.047,277,2.549,278,2.549,279,2.549,280,4.57,281,1.642,282,2.828,283,2.549,284,1.642,285,2.549,286,2.047,287,1.642,288,2.549,289,1.642,290,2.549,291,2.549,292,1.642,293,1.642,294,2.549,295,1.642,296,3.523,297,3.523,298,2.549,299,1.642,300,1.642,301,1.642,302,1.642,303,1.642,304,1.642,305,1.642,306,1.642,307,1.642,308,1.642,309,1.642,310,1.642,311,1.642,312,2.549,313,2.047]],["title/components/SidebarComponent.html",[0,0.332,90,0.767]],["body/components/SidebarComponent.html",[0,0.611,1,0.84,2,0.53,3,0.443,4,1.457,5,1.457,6,1.457,7,0.363,9,1.457,10,2.501,11,2.177,13,1.926,15,1.926,17,0.443,20,1.276,23,1.023,26,1.11,31,0.053,32,0.961,46,0.624,47,1.107,52,0.53,53,0.727,60,0.443,61,0.38,77,1.107,78,1.926,79,1.926,80,1.926,81,2.295,82,1.457,83,1.457,84,0.84,85,1.457,86,0.84,87,1.457,88,0.84,89,1.457,90,1.414,91,2.295,92,1.457,93,0.038,94,0.038,134,1.926,138,0.825,188,2.225,189,2.493,197,2.652,314,2.346,315,3.864,316,3.864,317,2.923,318,2.923,319,3.864,320,3.864]],["title/interfaces/Success.html",[183,0.664,266,1.538]],["body/interfaces/Success.html",[2,0.495,3,0.414,7,0.339,17,0.414,18,1.219,19,0.785,23,0.583,31,0.054,33,0.583,35,0.785,36,1.837,42,1.219,44,1.398,46,0.957,48,1.697,52,0.813,53,0.679,60,0.414,61,0.269,63,1.288,64,1.361,93,0.044,94,0.036,105,1.219,121,1.837,138,0.583,140,1.84,148,1.584,157,1.361,162,1.034,172,1.184,183,1.115,186,1.034,192,2.814,194,2.484,199,2.409,201,1.572,214,1.361,230,1.572,241,1.398,242,1.837,243,1.837,244,2.191,245,3.149,246,2.191,249,3.358,252,1.837,253,1.837,254,2.191,256,3.149,257,2.191,258,2.963,260,1.572,261,2.484,262,2.484,263,1.837,264,2.963,265,2.963,266,2.84,267,2.191,268,2.191,269,2.191,270,2.191]],["title/classes/Title.html",[19,0.767,61,0.263]],["body/classes/Title.html",[2,0.414,3,0.346,7,0.283,17,0.346,18,1.077,19,1.456,23,0.886,26,1.093,29,1.37,30,0.864,31,0.054,32,0.568,33,1.059,34,0.864,35,0.656,42,1.077,44,0.864,46,1.003,48,2,50,1.979,52,0.414,60,0.577,61,0.449,63,1.349,93,0.043,94,0.032,132,1.138,138,1.1,139,1.315,140,1.895,141,2.393,142,1.877,143,2.194,144,1.536,146,1.536,148,1.234,152,0.991,155,1.536,157,1.138,158,2.194,159,1.315,160,1.315,162,1.234,163,2.791,164,1.536,165,1.536,166,1.536,167,1.536,168,2.194,169,1.536,170,1.536,171,1.536,172,0.991,173,1.536,174,1.536,175,1.536,176,1.536,177,0.991,178,1.536,179,1.536,180,1.536,181,1.536,182,1.536,183,0.811,184,1.536,185,1.536,186,0.864,321,2.283,322,2.283,323,2.283,324,2.283]],["title/injectables/UserService.html",[106,1.011,241,1.011]],["body/injectables/UserService.html",[2,0.334,3,0.279,7,0.228,17,0.279,18,0.919,20,1.235,21,2.432,23,0.858,26,1.328,29,1.108,30,1.52,31,0.054,32,0.999,33,0.937,34,1.52,35,1.154,46,0.965,47,1.52,50,1.207,52,0.678,53,0.458,60,0.279,61,0.33,63,1.154,73,2.794,93,0.027,94,0.027,100,1.872,106,1.416,134,2.544,138,1.168,162,1.053,183,0.692,205,2.516,209,2.516,214,0.917,241,1.27,256,2.842,263,1.238,276,2.233,282,3.002,286,2.233,313,1.477,325,1.477,326,2.782,327,3.002,328,2.782,329,3.739,330,2.782,331,2.782,332,2.782,333,3.739,334,2.782,335,2.782,336,2.782,337,1.84,338,2.782,339,2.782,340,1.84,341,2.782,342,1.84,343,3.002,344,2.782,345,2.782,346,2.782,347,1.84,348,1.84,349,2.782,350,2.782,351,1.84,352,1.84,353,4.015,354,1.84,355,1.84,356,3.739,357,1.84,358,3.739,359,1.84,360,1.84,361,1.84,362,1.84,363,1.84,364,1.84]],["title/coverage.html",[365,2.919]],["body/coverage.html",[0,0.61,1,0.911,7,0.394,8,2.546,19,0.911,29,1.047,31,0.053,33,0.677,58,2.134,61,0.401,84,0.911,86,0.911,88,0.911,90,0.911,93,0.04,94,0.04,105,1.047,106,1.201,127,2.134,138,0.677,139,2.593,177,1.768,183,1.014,186,1.201,187,2.546,235,2.546,241,1.543,242,2.742,266,1.826,271,2.546,272,2.546,314,2.546,325,2.546,365,2.546,366,3.171,367,3.171,368,3.171,369,4.915,370,4.075,371,2.546,372,3.03,373,4.075,374,3.171,375,4.502,376,3.171,377,4.075,378,3.171,379,3.171,380,3.171,381,4.075,382,3.171,383,3.171,384,3.171,385,2.546,386,3.271,387,4.075,388,2.546,389,3.171,390,3.171]],["title/dependencies.html",[97,1.848,391,1.793]],["body/dependencies.html",[31,0.054,53,0.894,55,1.791,56,2.07,57,2.07,93,0.043,94,0.043,97,2.07,99,2.419,112,3.539,113,2.966,116,2.885,119,2.885,392,3.594,393,5.351,394,3.594,395,3.594,396,3.594,397,3.594,398,3.594,399,3.594,400,3.594,401,3.594,402,3.594,403,3.594,404,3.594,405,3.594,406,3.594,407,3.594,408,3.594]],["title/index.html",[17,0.339,409,2.234,410,2.234]],["body/index.html",[0,0.561,3,0.485,7,0.397,11,1.387,29,1.056,31,0.04,32,0.795,37,3.628,51,2.151,55,2.253,76,3.316,93,0.04,94,0.04,109,2.151,232,2.567,252,2.151,253,3.449,411,4.096,412,4.766,413,4.52,414,3.197,415,3.197,416,3.197,417,3.288,418,5.126,419,3.197,420,3.197,421,3.197,422,3.197,423,3.197,424,3.197,425,3.197,426,3.197,427,3.197,428,3.197,429,4.928,430,3.197,431,3.197,432,3.197,433,3.197,434,3.197,435,2.567,436,2.567,437,4.096,438,4.096,439,4.096,440,3.197,441,4.766,442,3.197,443,3.197,444,3.197,445,4.52,446,3.197,447,3.197]],["title/modules.html",[95,1.812]],["body/modules.html",[31,0.047,93,0.047,94,0.047,95,2.09,96,2.415,113,2.821,448,3.366,449,4.193,450,4.193]],["title/overview.html",[451,2.919]],["body/overview.html",[0,0.413,1,1.486,31,0.052,60,0.505,61,0.327,77,1.259,84,1.323,86,1.323,88,1.323,90,1.323,93,0.041,94,0.041,95,2.093,96,3.149,97,1.915,98,2.67,99,2.238,100,2.238,101,2.67,102,2.67,103,2.67,104,2.67,105,1.521,106,1.743,107,3.372,108,2.67,109,2.238,118,1.915,177,1.443,183,0.827,241,1.259,451,2.67,452,3.326,453,3.326,454,3.696]],["title/routes.html",[118,2.094]],["body/routes.html",[31,0.048,93,0.048,94,0.048,118,2.459]],["title/miscellaneous/variables.html",[372,2.16,455,1.793]],["body/miscellaneous/variables.html",[17,0.47,31,0.053,33,0.951,38,2.484,39,3.22,41,2.484,42,1.022,49,2.995,50,1.931,55,1.542,56,1.782,57,2.563,58,3.282,76,2.699,93,0.039,94,0.039,137,1.782,142,2.31,152,1.931,243,2.082,260,1.782,327,2.484,343,2.484,371,2.484,372,2.082,385,2.484,386,4.012,388,2.484,391,2.484,417,3.573,435,2.484,436,3.22,448,3.22,454,2.484,455,2.484,456,3.095,457,3.095,458,3.095,459,3.095,460,3.095,461,3.095,462,3.095,463,3.095,464,3.095,465,3.095,466,3.095,467,3.095,468,3.095,469,3.095,470,3.095,471,3.095,472,4.011,473,3.095,474,3.095,475,3.095,476,3.095,477,3.095,478,3.095,479,4.708]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":177,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{},"coverage.html":{},"overview.html":{}}}],["0.8.19",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":452,"title":{},"body":{"overview.html":{}}}],["1.7.4",{"_index":415,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":454,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.4.1",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["3.1.4",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["3/9",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":453,"title":{},"body":{"overview.html":{}}}],["5.2.0",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["8/10",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_compon",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["ad",{"_index":286,"title":{},"body":{"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":209,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["addedtoshelf",{"_index":275,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["addmulttobookshelf",{"_index":330,"title":{},"body":{"injectables/UserService.html":{}}}],["addmulttobookshelf(book",{"_index":336,"title":{},"body":{"injectables/UserService.html":{}}}],["addtobookshelf",{"_index":276,"title":{},"body":{"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["addtobookshelf(book",{"_index":339,"title":{},"body":{"injectables/UserService.html":{}}}],["addtobookshelf(ev",{"_index":279,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["angular",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/anim",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["angular/compil",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["app.compon",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":430,"title":{},"body":{"index.html":{}}}],["auth",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.config",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["authconfig",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"miscellaneous/variables.html":{}}}],["authorinput",{"_index":192,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["automat",{"_index":423,"title":{},"body":{"index.html":{}}}],["b",{"_index":159,"title":{},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["b.author",{"_index":174,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["b.getmaintitl",{"_index":362,"title":{},"body":{"injectables/UserService.html":{}}}],["b.getmaintitle()!=book.getmaintitl",{"_index":311,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["b.id",{"_index":175,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["b.issearch",{"_index":364,"title":{},"body":{"injectables/UserService.html":{}}}],["back",{"_index":233,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["backend",{"_index":245,"title":{},"body":{"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["base",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["be",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":353,"title":{},"body":{"injectables/UserService.html":{}}}],["best",{"_index":207,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["blob",{"_index":258,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["book",{"_index":138,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["book([new",{"_index":170,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["book(b.titl",{"_index":173,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["book..':book.getmaintitl",{"_index":226,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["book..\\':book.getmaintitl",{"_index":234,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["book.authors[0",{"_index":227,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["book.getbook(b",{"_index":308,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["book.getmaintitl",{"_index":313,"title":{},"body":{"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["book.issearch",{"_index":225,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["booklab",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["booksearchcomplet",{"_index":331,"title":{},"body":{"injectables/UserService.html":{}}}],["booksearchcomplete(book",{"_index":341,"title":{},"body":{"injectables/UserService.html":{}}}],["bookshelf",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["bookshelf'},{'nam",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["bookshelf.component.html",{"_index":191,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["bookshelf.component.less",{"_index":190,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["bookshelfcompon",{"_index":84,"title":{"components/BookshelfComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["booksub",{"_index":329,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{}}}],["bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":450,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":429,"title":{},"body":{"index.html":{}}}],["button",{"_index":291,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["chang",{"_index":425,"title":{},"body":{"index.html":{}}}],["check",{"_index":252,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"index.html":{}}}],["checkhealth",{"_index":246,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["class",{"_index":61,"title":{"classes/Book.html":{},"classes/Title.html":{}},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["class=\"book",{"_index":312,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["cli",{"_index":413,"title":{},"body":{"index.html":{}}}],["client",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":426,"title":{},"body":{"index.html":{}}}],["come",{"_index":185,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["components/bookshelf/bookshelf.compon",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["components/header/header.compon",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["components/imag",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar/sidebar.compon",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["configur",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["configureauthor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('click",{"_index":298,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["console.log(res.success",{"_index":268,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["const",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"classes/Book.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{}}}],["construct",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["constructor(http",{"_index":248,"title":{},"body":{"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{}}}],["constructor(oauthservic",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(priv",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["constructor(publ",{"_index":168,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["constructor(titl",{"_index":147,"title":{},"body":{"classes/Book.html":{}}}],["constructor(us",{"_index":198,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["constructor(valu",{"_index":321,"title":{},"body":{"classes/Title.html":{}}}],["contain",{"_index":160,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{}}}],["core",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":208,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["coverag",{"_index":365,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credenti",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":158,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["datatyp",{"_index":214,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"injectables/UserService.html":{}}}],["debug",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declar",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["delet",{"_index":205,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["deletebook",{"_index":195,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["deletebook(book",{"_index":203,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["deletefrombookshelf",{"_index":332,"title":{},"body":{"injectables/UserService.html":{}}}],["deletefrombookshelf(book",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["depend",{"_index":97,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["detect",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectionresult",{"_index":186,"title":{"interfaces/DetectionResult.html":{}},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"coverage.html":{}}}],["dev",{"_index":420,"title":{},"body":{"index.html":{}}}],["develop",{"_index":416,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":165,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["direct",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":428,"title":{},"body":{"index.html":{}}}],["directori",{"_index":433,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":432,"title":{},"body":{"index.html":{}}}],["document",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["dummyclientsecret",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynam",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":442,"title":{},"body":{"index.html":{}}}],["edit",{"_index":328,"title":{},"body":{"injectables/UserService.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["empti",{"_index":164,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["enabl",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabletrac",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":441,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":228,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["enterbook",{"_index":193,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["environ",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":280,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["event.srcelement.fil",{"_index":299,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["execut",{"_index":438,"title":{},"body":{"index.html":{}}}],["export",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["fals",{"_index":152,"title":{},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["fileread",{"_index":301,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["find",{"_index":172,"title":{},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{}}}],["findbook",{"_index":196,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{}}}],["findbook(nameinput",{"_index":254,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["finder",{"_index":320,"title":{},"body":{"components/SidebarComponent.html":{}}}],["flag",{"_index":435,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["formsmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":282,"title":{},"body":{"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["further",{"_index":444,"title":{},"body":{"index.html":{}}}],["gener",{"_index":412,"title":{},"body":{"index.html":{}}}],["get",{"_index":409,"title":{"index.html":{}},"body":{}}],["getbook",{"_index":145,"title":{},"body":{"classes/Book.html":{}}}],["getbook(b",{"_index":155,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["getbookshelf",{"_index":333,"title":{},"body":{"injectables/UserService.html":{}}}],["getmaintitl",{"_index":146,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["given",{"_index":157,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{}}}],["go",{"_index":232,"title":{},"body":{"components/BookshelfComponent.html":{},"index.html":{}}}],["handl",{"_index":201,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["header",{"_index":236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'nam",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["header.component.html",{"_index":238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.less",{"_index":237,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":86,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["health",{"_index":264,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["help",{"_index":445,"title":{},"body":{"index.html":{}}}],["hold",{"_index":326,"title":{},"body":{"injectables/UserService.html":{}}}],["home",{"_index":319,"title":{},"body":{"components/SidebarComponent.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["http",{"_index":199,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["http://localhost:4200",{"_index":422,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api/auth/token",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":249,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["httpclientmodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["httpservic",{"_index":105,"title":{"injectables/HttpService.html":{}},"body":{"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"coverage.html":{},"overview.html":{}}}],["id",{"_index":142,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":230,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["image'},{'nam",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["imageuploadcompon",{"_index":88,"title":{"components/ImageUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":262,"title":{},"body":{"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["implement",{"_index":188,"title":{},"body":{"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["import",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":327,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":241,"title":{"injectables/HttpService.html":{},"injectables/UserService.html":{}},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":202,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["interact",{"_index":244,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["interfac",{"_index":183,"title":{"interfaces/DetectionResult.html":{},"interfaces/Success.html":{}},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["invok",{"_index":290,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["issearch",{"_index":143,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["issu",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isundefin",{"_index":166,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["isundefined(b",{"_index":169,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["isundefined(r",{"_index":181,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["jqueri",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":440,"title":{},"body":{"index.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["link",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":285,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["login",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":163,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["match",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":455,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":140,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{}}}],["modul",{"_index":95,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":446,"title":{},"body":{"index.html":{}}}],["move",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["multipl",{"_index":338,"title":{},"body":{"injectables/UserService.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"index.html":{}}}],["nameinput",{"_index":194,"title":{},"body":{"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["navig",{"_index":421,"title":{},"body":{"index.html":{}}}],["new",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":418,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":197,"title":{},"body":{"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["null",{"_index":295,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["nullvalidationhandl",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["oauth",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["oauth2",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["oauthmodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservic",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":256,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"injectables/UserService.html":{}}}],["oidc",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":189,"title":{},"body":{"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["onsubmit",{"_index":277,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["onsubmit(ev",{"_index":288,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["option",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["out",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":451,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":391,"title":{"dependencies.html":{}},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["path",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["permiss",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pictur",{"_index":283,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["privat",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["process",{"_index":261,"title":{},"body":{"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{}}}],["prod",{"_index":434,"title":{},"body":{"index.html":{}}}],["product",{"_index":436,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":411,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":443,"title":{},"body":{"index.html":{}}}],["provid",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["public",{"_index":141,"title":{},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/ImageUploadComponent.html":{},"classes/Title.html":{}}}],["putimg",{"_index":247,"title":{},"body":{"injectables/HttpService.html":{}}}],["putimg(img",{"_index":257,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["re",{"_index":178,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["reader",{"_index":300,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["reader.onload",{"_index":303,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["reader.readasdataurl(files[0",{"_index":302,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["reader.result",{"_index":304,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["readm",{"_index":447,"title":{},"body":{"index.html":{}}}],["regist",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":424,"title":{},"body":{"index.html":{}}}],["repres",{"_index":184,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["request",{"_index":243,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"miscellaneous/variables.html":{}}}],["res.results.map(b",{"_index":307,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["res.valu",{"_index":182,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["reset",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":265,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["rest",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["result",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["rout",{"_index":118,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{},"routes.html":{}}}],["routermodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":253,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"index.html":{}}}],["rxj",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["rxjs/behaviorsubject",{"_index":354,"title":{},"body":{"injectables/UserService.html":{}}}],["rxjs/observ",{"_index":263,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"injectables/UserService.html":{}}}],["scaffold",{"_index":427,"title":{},"body":{"index.html":{}}}],["scope",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":162,"title":{},"body":{"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{}}}],["secret",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["send",{"_index":260,"title":{},"body":{"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"miscellaneous/variables.html":{}}}],["separ",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["serv",{"_index":419,"title":{},"body":{"index.html":{}}}],["server",{"_index":417,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["servic",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["services/http/http.servic",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["services/user/user.servic",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["set",{"_index":343,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["setbookshelf",{"_index":334,"title":{},"body":{"injectables/UserService.html":{}}}],["setbookshelf(book",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["showdebuginform",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebar",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":316,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.less",{"_index":315,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcompon",{"_index":90,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spa",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spa'",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.config.t",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.config.t",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/bookshelf/bookshelf.component.t",{"_index":187,"title":{},"body":{"components/BookshelfComponent.html":{},"coverage.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:14",{"_index":211,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:15",{"_index":212,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:16",{"_index":213,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:17",{"_index":200,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:28",{"_index":210,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:39",{"_index":204,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/bookshelf/bookshelf.component.ts:46",{"_index":206,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["src/app/components/header/header.component.t",{"_index":235,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:12",{"_index":239,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:19",{"_index":240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/imag",{"_index":271,"title":{},"body":{"components/ImageUploadComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.t",{"_index":314,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:12",{"_index":317,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:20",{"_index":318,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/datatypes.t",{"_index":139,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{},"coverage.html":{}}}],["src/app/datatypes.ts:13",{"_index":324,"title":{},"body":{"classes/Title.html":{}}}],["src/app/datatypes.ts:14",{"_index":323,"title":{},"body":{"classes/Title.html":{}}}],["src/app/datatypes.ts:21",{"_index":149,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:30",{"_index":154,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:31",{"_index":150,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:32",{"_index":151,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:33",{"_index":153,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:41",{"_index":156,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:52",{"_index":161,"title":{},"body":{"classes/Book.html":{}}}],["src/app/datatypes.ts:6",{"_index":322,"title":{},"body":{"classes/Title.html":{}}}],["src/app/services/http/http.service.t",{"_index":242,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"coverage.html":{}}}],["src/app/services/http/http.service.ts:17",{"_index":250,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:29",{"_index":251,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:40",{"_index":259,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:50",{"_index":255,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/user/user.service.t",{"_index":325,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user/user.service.ts:12",{"_index":352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:13",{"_index":335,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:27",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:35",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:44",{"_index":340,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:53",{"_index":337,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:63",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:72",{"_index":342,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.t",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":410,"title":{"index.html":{}},"body":{}}],["statement",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":144,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["still",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["store",{"_index":431,"title":{},"body":{"index.html":{}}}],["string",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["submit",{"_index":231,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["subscript",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["success",{"_index":266,"title":{"interfaces/Success.html":{}},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{},"coverage.html":{}}}],["support",{"_index":448,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":449,"title":{},"body":{"modules.html":{}}}],["t.type",{"_index":180,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["tabl",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["test",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["this.addedtoshelf",{"_index":297,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.authorinput",{"_index":223,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.authorinput).subscribe((result",{"_index":221,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.book",{"_index":216,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.bookshelf",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bookshelf.concat(book",{"_index":360,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bookshelf.filter(b",{"_index":361,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bookshelf.push(book",{"_index":359,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bookshelf[this.bookshelf.findindex(b",{"_index":363,"title":{},"body":{"injectables/UserService.html":{}}}],["this.booksub",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["this.booksub.asobserv",{"_index":357,"title":{},"body":{"injectables/UserService.html":{}}}],["this.booksub.next(this.bookshelf",{"_index":358,"title":{},"body":{"injectables/UserService.html":{}}}],["this.configureauthor",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["this.enterbook",{"_index":217,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.http.checkhealth",{"_index":305,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.http.findbook(this.nameinput",{"_index":220,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.http.get('http://localhost:8080/api/health').subscribe((r",{"_index":267,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["this.http.get('http://localhost:8080/api/search?titl",{"_index":270,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["this.http.put('http://localhost:8080/api/detect",{"_index":269,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Success.html":{}}}],["this.http.putimg(null).subscribe((r",{"_index":306,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.img",{"_index":294,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.nameinput",{"_index":224,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.oauthservice.configure(authconfig",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflow('test@example.com",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.oauthservice.tokenvalidationhandl",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.result",{"_index":296,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.results.filter(b",{"_index":310,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.titles.find(t",{"_index":179,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["this.titles.length",{"_index":176,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["this.user.addmulttobookshelf(this.result",{"_index":309,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["this.user.addtobookshelf(new",{"_index":219,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.user.booksearchcomplete(book.getbook(result.results[0",{"_index":222,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.user.deletefrombookshelf(book",{"_index":218,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["this.user.getbookshelf().subscribe(b",{"_index":215,"title":{},"body":{"components/BookshelfComponent.html":{}}}],["titl",{"_index":19,"title":{"classes/Title.html":{}},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"coverage.html":{}}}],["title('didn\\'t",{"_index":171,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["todo",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokenendpoint",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["true",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"components/BookshelfComponent.html":{},"interfaces/DetectionResult.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"interfaces/Success.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":437,"title":{},"body":{"index.html":{}}}],["upload",{"_index":229,"title":{},"body":{"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{}}}],["upload.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.component.html",{"_index":274,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.less",{"_index":273,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.t",{"_index":272,"title":{},"body":{"components/ImageUploadComponent.html":{},"coverage.html":{}}}],["upload.component.ts:16",{"_index":292,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.ts:17",{"_index":293,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.ts:18",{"_index":278,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.ts:28",{"_index":287,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.ts:38",{"_index":289,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.ts:56",{"_index":281,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload.component.ts:66",{"_index":284,"title":{},"body":{"components/ImageUploadComponent.html":{}}}],["upload/imag",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/ImageUploadComponent.html":{},"coverage.html":{}}}],["us",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["user",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"injectables/UserService.html":{}}}],["userservic",{"_index":106,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/BookshelfComponent.html":{},"components/ImageUploadComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["util",{"_index":167,"title":{},"body":{"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{}}}],["valu",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"classes/Book.html":{},"interfaces/DetectionResult.html":{},"classes/Title.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{}}}],["variabl",{"_index":372,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":414,"title":{},"body":{"index.html":{}}}],["via",{"_index":439,"title":{},"body":{"index.html":{}}}],["void",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/BookshelfComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ImageUploadComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["zone.j",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureAuthorization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthService: OAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            Construct a new AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                    OAuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                oauthService The services used as OAuth client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configureAuthorization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configureAuthorization()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Configure the OAuth authorization for the REST API we connect to.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BookLab'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NullValidationHandler, OAuthService } from 'angular-oauth2-oidc';\n\nimport { authConfig } from './auth.config';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BookLab';\n\n  /**\n   * Construct a new {@link AppComponent}.\n   *\n   * @param oauthService {OAuthService} oauthService The services used as OAuth client.\n   */\n  constructor(private oauthService: OAuthService) {\n      this.configureAuthorization();\n  }\n\n  /**\n   * Configure the OAuth authorization for the REST API we connect to.\n   */\n  private configureAuthorization() {\n      this.oauthService.configure(authConfig);\n      this.oauthService.tokenValidationHandler = new NullValidationHandler();\n\n      // TODO Move this to a separate component where we login based on user credentials\n      this.oauthService.fetchTokenUsingPasswordFlow('test@example.com', 'test');\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookshelfComponent', 'selector': 'app-bookshelf'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageUploadComponent', 'selector': 'app-image'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookshelfComponent\n\nBookshelfComponent\n\nAppModule -->\n\nBookshelfComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nImageUploadComponent\n\nImageUploadComponent\n\nAppModule -->\n\nImageUploadComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BookshelfComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                ImageUploadComponent\n                            \n                            \n                                SidebarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     HttpService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { OAuthModule } from 'angular-oauth2-oidc';\n\nimport { HttpService } from './services/http/http.service';\nimport { UserService } from './services/user/user.service';\n\nimport { AppComponent } from './app.component';\nimport { ImageUploadComponent } from './components/image-upload/image-upload.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { BookshelfComponent } from './components/bookshelf/bookshelf.component';\nimport { SidebarComponent} from './components/sidebar/sidebar.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ImageUploadComponent\n    },\n    {\n        path: 'bookshelf',\n        component: BookshelfComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ImageUploadComponent,\n        HeaderComponent,\n        BookshelfComponent,\n        SidebarComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        RouterModule.forRoot(\n            routes,\n            { enableTracing: true } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dataTypes.ts\n        \n\n            \n                Description\n            \n            \n                Class to model a book.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authors\n                            \n                            \n                                    Public\n                                ids\n                            \n                            \n                                    Public\n                                isSearched\n                            \n                            \n                                    Public\n                                titles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBook\n                            \n                            \n                                getMainTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titles: Title[], authors: string[], ids: string[], isSearched: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dataTypes.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor for Book.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titles\n                                                  \n                                                        \n                                                                    Title[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ids\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        isSearched\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authors:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dataTypes.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ids\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ids:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dataTypes.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSearched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isSearched:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dataTypes.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titles:     Title[]\n\n                    \n                \n                    \n                        \n                            Type :     Title[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dataTypes.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBook\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBook(b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dataTypes.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns a new book with given data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                container for data in the book\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Book\n\n                            \n                                \n                                    a new Book\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMainTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMainTitle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dataTypes.ts:52\n                            \n                        \n\n\n                \n                    \n                            Searches the main title of the book.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    result of the search, string is empty if the book didn't have a main title\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {isUndefined} from 'util';\n\n/**\n * Class to model a book title.\n */\nexport class Title {\n\n    /**\n     * Constructor for Title.\n     * @param {string} value\n     * @param {string} type\n     */\n    constructor(public value: string,\n                public type: string) {\n    }\n}\n\n/**\n * Class to model a book.\n */\nexport class Book {\n\n    /**\n     * Constructor for Book.\n     * @param {Title[]} titles\n     * @param {string[]} authors\n     * @param {string[]} ids\n     * @param {boolean} isSearched\n     */\n    constructor(public titles: Title[],\n                public authors: string[],\n                public ids: string[],\n                public isSearched: boolean = false) {\n    }\n\n    /**\n     * Returns a new book with given data.\n     * @param b container for data in the book\n     * @returns {Book} a new Book\n     */\n    static getBook(b: any): Book {\n        if (isUndefined(b)) {\n            return new Book([new Title('Didn\\'t find your book!', 'MAIN')], [''], ['']);\n        }\n        return new Book(b.titles, b.authors, b.ids);\n    }\n\n    /**\n     * Searches the main title of the book.\n     * @returns {string} result of the search, string is empty if the book didn't have a main title\n     */\n    getMainTitle(): string {\n        if (this.titles.length === 0) {\n            return '';\n        }\n        const res = this.titles.find(t => t.type === 'MAIN');\n        return isUndefined(res) ? '' : res.value;\n    }\n}\n\n/**\n * Interface to represent the results coming from the api.\n */\nexport interface DetectionResult {\n    results: Book[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookshelfComponent.html":{"url":"components/BookshelfComponent.html","title":"component - BookshelfComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookshelfComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/bookshelf/bookshelf.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bookshelf\n            \n\n            \n                styleUrls\n                bookshelf.component.less\n            \n\n\n\n            \n                templateUrl\n                ./bookshelf.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authorInput\n                            \n                            \n                                    Public\n                                books\n                            \n                            \n                                    Public\n                                enterBook\n                            \n                            \n                                    Public\n                                nameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBook\n                            \n                            \n                                findBook\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/bookshelf/bookshelf.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for bookshelf component, handles user-input to the bookshelf.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteBook\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteBook(book: Book)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Deletes book from the users bookshelf.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        book\n                                                        \n                                                                    Book\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : book to be deleted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findBook\n                            \n                            \n                        \n                    \n                \n                \n                    \nfindBook()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Finds a book in the api with best corresponding title and author and adds it to the bookshelf.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authorInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authorInput:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            books\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        books:     Book[]\n\n                    \n                \n                    \n                        \n                            Type :     Book[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enterBook\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enterBook:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nameInput:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/bookshelf/bookshelf.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../services/user/user.service';\nimport {Book, Title} from '../../dataTypes';\nimport {HttpService} from '../../services/http/http.service';\n\n@Component({\n    selector: 'app-bookshelf',\n    templateUrl: './bookshelf.component.html',\n    styleUrls: ['./bookshelf.component.less']\n})\n\nexport class BookshelfComponent implements OnInit {\n\n    public books: Book[];\n    public enterBook: boolean;\n    public nameInput: string;\n    public authorInput: string;\n\n    /**\n     * Constructor for bookshelf component, handles user-input to the bookshelf.\n     *\n     * @param {UserService} user\n     * @param {HttpService} http\n     */\n    constructor(private user: UserService, private http: HttpService) {\n    }\n\n    ngOnInit() {\n        this.user.getBookshelf().subscribe(b => {\n            this.books = b;\n        });\n        this.enterBook = false;\n    }\n\n    /**\n     * Deletes book from the users bookshelf.\n     * @param {Book} book: book to be deleted\n     */\n    deleteBook(book: Book) {\n        this.user.deleteFromBookshelf(book);\n    }\n\n    /**\n     * Finds a book in the api with best corresponding title and author and adds it to the bookshelf.\n     */\n    findBook() {\n        this.user.addToBookshelf(new Book([], [], [], true));\n        this.http.findBook(this.nameInput, this.authorInput).subscribe((result) => {\n            this.user.bookSearchComplete(Book.getBook(result.results[0]));\n        });\n        this.enterBook = false;\n        this.authorInput = '';\n        this.nameInput = '';\n\n    }\n}\n\n    \n\n    \n        \n    Your Bookshelf\n    \n        \n            You do not have any books yet\n        \n    \n    \n        \n            \n            \n        \n        {{book.isSearched? 'searching book..':book.getMainTitle()}}\n        {{book.isSearched? '': book.authors[0]}}\n    \n    \n        \n        \n            Book\n            \n            Author\n            \n        \n    \n    \n        \n            Enter your book\n            or\n            Upload an image of your bookshelf\n        \n        \n            Submit\n            Go Back\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Your Bookshelf                        You do not have any books yet                                                                {{book.isSearched? \\'searching book..\\':book.getMainTitle()}}        {{book.isSearched? \\'\\': book.authors[0]}}                                    Book                        Author                                                Enter your book            or            Upload an image of your bookshelf                            Submit            Go Back            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookshelfComponent', 'selector': 'app-bookshelf'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageUploadComponent', 'selector': 'app-image'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookshelfComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetectionResult.html":{"url":"interfaces/DetectionResult.html","title":"interface - DetectionResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetectionResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dataTypes.ts\n        \n\n            \n                Description\n            \n            \n                Interface to represent the results coming from the api.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        results\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     Book[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Book[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {isUndefined} from 'util';\n\n/**\n * Class to model a book title.\n */\nexport class Title {\n\n    /**\n     * Constructor for Title.\n     * @param {string} value\n     * @param {string} type\n     */\n    constructor(public value: string,\n                public type: string) {\n    }\n}\n\n/**\n * Class to model a book.\n */\nexport class Book {\n\n    /**\n     * Constructor for Book.\n     * @param {Title[]} titles\n     * @param {string[]} authors\n     * @param {string[]} ids\n     * @param {boolean} isSearched\n     */\n    constructor(public titles: Title[],\n                public authors: string[],\n                public ids: string[],\n                public isSearched: boolean = false) {\n    }\n\n    /**\n     * Returns a new book with given data.\n     * @param b container for data in the book\n     * @returns {Book} a new Book\n     */\n    static getBook(b: any): Book {\n        if (isUndefined(b)) {\n            return new Book([new Title('Didn\\'t find your book!', 'MAIN')], [''], ['']);\n        }\n        return new Book(b.titles, b.authors, b.ids);\n    }\n\n    /**\n     * Searches the main title of the book.\n     * @returns {string} result of the search, string is empty if the book didn't have a main title\n     */\n    getMainTitle(): string {\n        if (this.titles.length === 0) {\n            return '';\n        }\n        const res = this.titles.find(t => t.type === 'MAIN');\n        return isUndefined(res) ? '' : res.value;\n    }\n}\n\n/**\n * Interface to represent the results coming from the api.\n */\nexport interface DetectionResult {\n    results: Book[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.less\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for HeaderComponent.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.less']\n})\n\n/**\n * Class for header component.\n */\nexport class HeaderComponent implements OnInit {\n\n    /**\n     * Constructor for HeaderComponent.\n     */\n    constructor() {}\n\n    ngOnInit() {}\n}\n\n    \n\n    \n        \n\n    \n        BookLab\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            BookLab    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookshelfComponent', 'selector': 'app-bookshelf'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageUploadComponent', 'selector': 'app-image'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to handle all http requests and interactions with the backend.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkHealth\n                            \n                            \n                                findBook\n                            \n                            \n                                putImg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http/http.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for HttpService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkHealth\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckHealth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/http/http.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Checks if the backend is running.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findBook\n                            \n                            \n                        \n                    \n                \n                \n                    \nfindBook(nameInput: string, authorInput: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/http/http.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Finds a book with the given title and author.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nameInput\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        authorInput\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    : result of the backend search\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            putImg\n                            \n                            \n                        \n                    \n                \n                \n                    \nputImg(img: Blob)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/http/http.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Sends an image to the backend for processing.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        img\n                                                        \n                                                                    Blob\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    : result of the backend processing\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {DetectionResult} from '../../dataTypes';\n\n/**\n * Interface to model health response from api.\n */\ninterface Success {\n    success: boolean;\n}\n\n/**\n * Service to handle all http requests and interactions with the backend.\n */\n@Injectable()\nexport class HttpService {\n\n    /**\n     * Constructor for HttpService\n     * @param {HttpClient} http\n     */\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Checks if the backend is running.\n     */\n    checkHealth() {\n        this.http.get('http://localhost:8080/api/health').subscribe((res: Success) => {\n            console.log(res.success);\n        });\n    }\n\n    /**\n     * Sends an image to the backend for processing.\n     * @param {Blob} img\n     * @returns {Observable}: result of the backend processing\n     */\n    putImg(img: Blob): Observable {\n        return this.http.put('http://localhost:8080/api/detection', img);\n    }\n\n    /**\n     * Finds a book with the given title and author.\n     * @param {string} nameInput\n     * @param {string} authorInput\n     * @returns {Observable}: result of the backend search\n     */\n    findBook(nameInput: string, authorInput: string): Observable {\n        return this.http.get('http://localhost:8080/api/search?title=' + nameInput + '&author=' + authorInput);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageUploadComponent.html":{"url":"components/ImageUploadComponent.html","title":"component - ImageUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/image-upload/image-upload.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-image\n            \n\n            \n                styleUrls\n                image-upload.component.less\n            \n\n\n\n            \n                templateUrl\n                ./image-upload.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addedToShelf\n                            \n                            \n                                    Public\n                                img\n                            \n                            \n                                    Public\n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToBookShelf\n                            \n                            \n                                deleteBook\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/image-upload/image-upload.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor for ImageUploadComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToBookShelf\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToBookShelf(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Adds the books found in the picture to the bookshelf.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteBook\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteBook(book: Book)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Deletes a book from the list of books to be added to the bookshelf.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        book\n                                                        \n                                                                    Book\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : book to be deleted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Invoked by the image upload button, sends the image from the event to the backend for processing.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : contains the image from the input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addedToShelf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addedToShelf:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            img\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        img:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Book[]\n\n                    \n                \n                    \n                        \n                            Type :     Book[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/image-upload/image-upload.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http/http.service';\nimport { UserService } from '../../services/user/user.service';\nimport { Book } from '../../dataTypes';\n\n@Component({\n    selector: 'app-image',\n    templateUrl: './image-upload.component.html',\n    styleUrls: ['./image-upload.component.less']\n})\n\n/**\n * Class for the image upload component, handles the uploading of an image and can add it to the bookshelf.\n */\nexport class ImageUploadComponent implements OnInit {\n    public img: any;\n    public results: Book[];\n    public addedToShelf: boolean;\n\n    /**\n     * Constructor for ImageUploadComponent.\n     * @param {HttpService} http\n     * @param {UserService} user\n     */\n    constructor(private http: HttpService, private user: UserService) {\n    }\n\n    ngOnInit() {\n        this.img = null;\n        this.results = [];\n        this.addedToShelf = false;\n    }\n\n    /**\n     * Invoked by the image upload button, sends the image from the event to the backend for processing.\n     * @param event: contains the image from the input element\n     */\n    onSubmit(event) {\n        console.log('click!');\n        const files = event.srcElement.files;\n        const reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onload = () => this.img = reader.result;\n        this.http.checkHealth();\n        this.http.putImg(null).subscribe((res) => {\n            this.results = res.results.map(b => Book.getBook(b));\n        });\n        this.addedToShelf = false;\n\n    }\n\n    /**\n     * Adds the books found in the picture to the bookshelf.\n     * @param {Event} event\n     */\n    addToBookShelf(event: Event) {\n        console.log('click!');\n        this.user.addMultToBookshelf(this.results);\n        this.addedToShelf = true;\n    }\n\n    /**\n     * Deletes a book from the list of books to be added to the bookshelf.\n     * @param {Book} book: book to be deleted\n     */\n    deleteBook(book: Book) {\n        this.results = this.addedToShelf? this.results :\n            this.results.filter(b => b.getMainTitle()!=book.getMainTitle());\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Upload your image\n                \n            \n        \n        \n            \n            \n                \n            \n            No books were found\n             0\" class=\"books\">\n                \n                    \n                    {{book.getMainTitle()}}\n                    {{book.authors[0]}}\n                \n                \n                    Add to your bookshelf\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Upload your image                                                                                                            No books were found             0\" class=\"books\">                                                        {{book.getMainTitle()}}                    {{book.authors[0]}}                                                    Add to your bookshelf                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookshelfComponent', 'selector': 'app-bookshelf'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageUploadComponent', 'selector': 'app-image'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.less\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for SidebarComponent\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.less']\n})\n\n/**\n * Class for sidebar component.\n */\nexport class SidebarComponent implements OnInit {\n\n    /**\n     * Constructor for SidebarComponent\n     */\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        Home\n        About us\n        Your bookshelf\n        Book finder\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Home        About us        Your bookshelf        Book finder    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookshelfComponent', 'selector': 'app-bookshelf'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageUploadComponent', 'selector': 'app-image'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Success.html":{"url":"interfaces/Success.html","title":"interface - Success","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Success\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface to model health response from api.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {DetectionResult} from '../../dataTypes';\n\n/**\n * Interface to model health response from api.\n */\ninterface Success {\n    success: boolean;\n}\n\n/**\n * Service to handle all http requests and interactions with the backend.\n */\n@Injectable()\nexport class HttpService {\n\n    /**\n     * Constructor for HttpService\n     * @param {HttpClient} http\n     */\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Checks if the backend is running.\n     */\n    checkHealth() {\n        this.http.get('http://localhost:8080/api/health').subscribe((res: Success) => {\n            console.log(res.success);\n        });\n    }\n\n    /**\n     * Sends an image to the backend for processing.\n     * @param {Blob} img\n     * @returns {Observable}: result of the backend processing\n     */\n    putImg(img: Blob): Observable {\n        return this.http.put('http://localhost:8080/api/detection', img);\n    }\n\n    /**\n     * Finds a book with the given title and author.\n     * @param {string} nameInput\n     * @param {string} authorInput\n     * @returns {Observable}: result of the backend search\n     */\n    findBook(nameInput: string, authorInput: string): Observable {\n        return this.http.get('http://localhost:8080/api/search?title=' + nameInput + '&author=' + authorInput);\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Title.html":{"url":"classes/Title.html","title":"class - Title","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Title\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dataTypes.ts\n        \n\n            \n                Description\n            \n            \n                Class to model a book title.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dataTypes.ts:6\n                            \n                        \n\n                \n                    \n                            Constructor for Title.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dataTypes.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dataTypes.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {isUndefined} from 'util';\n\n/**\n * Class to model a book title.\n */\nexport class Title {\n\n    /**\n     * Constructor for Title.\n     * @param {string} value\n     * @param {string} type\n     */\n    constructor(public value: string,\n                public type: string) {\n    }\n}\n\n/**\n * Class to model a book.\n */\nexport class Book {\n\n    /**\n     * Constructor for Book.\n     * @param {Title[]} titles\n     * @param {string[]} authors\n     * @param {string[]} ids\n     * @param {boolean} isSearched\n     */\n    constructor(public titles: Title[],\n                public authors: string[],\n                public ids: string[],\n                public isSearched: boolean = false) {\n    }\n\n    /**\n     * Returns a new book with given data.\n     * @param b container for data in the book\n     * @returns {Book} a new Book\n     */\n    static getBook(b: any): Book {\n        if (isUndefined(b)) {\n            return new Book([new Title('Didn\\'t find your book!', 'MAIN')], [''], ['']);\n        }\n        return new Book(b.titles, b.authors, b.ids);\n    }\n\n    /**\n     * Searches the main title of the book.\n     * @returns {string} result of the search, string is empty if the book didn't have a main title\n     */\n    getMainTitle(): string {\n        if (this.titles.length === 0) {\n            return '';\n        }\n        const res = this.titles.find(t => t.type === 'MAIN');\n        return isUndefined(res) ? '' : res.value;\n    }\n}\n\n/**\n * Interface to represent the results coming from the api.\n */\nexport interface DetectionResult {\n    results: Book[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Class to hold the information of the user and to provide an interface for editing this information.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bookshelf\n                            \n                            \n                                    Private\n                                bookSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMultToBookshelf\n                            \n                            \n                                addToBookshelf\n                            \n                            \n                                bookSearchComplete\n                            \n                            \n                                deleteFromBookshelf\n                            \n                            \n                                getBookshelf\n                            \n                            \n                                setBookshelf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for UserService.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addMultToBookshelf\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMultToBookshelf(books: Book[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Adds multiple books to the bookshelf of the user.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        books\n                                                        \n                                                                    Book[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToBookshelf\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToBookshelf(book: Book)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Adds a book to the bookshelf of the user.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        book\n                                                        \n                                                                    Book\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : book to be added\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookSearchComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \nbookSearchComplete(book: Book)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Sets a book that still was being searched to its found values.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        book\n                                                        \n                                                                    Book\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : book that was found.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteFromBookshelf\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteFromBookshelf(book: Book)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Deletes a book from the bookshelf.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        book\n                                                        \n                                                                    Book\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : book to be deleted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBookshelf\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBookshelf()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Method to get an subscription to the bookshelf.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    : observable of the users bookshelf\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setBookshelf\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetBookshelf(books: Book[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Sets the bookshelf of the user.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        books\n                                                        \n                                                                    Book[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : new bookshelf of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bookshelf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bookshelf:     Book[]\n\n                    \n                \n                    \n                        \n                            Type :     Book[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bookSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bookSub:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Book} from '../../dataTypes';\nimport {Observable} from 'rxjs/Observable';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\n/**\n * Class to hold the information of the user and to provide an interface for editing this information.\n */\n@Injectable()\nexport class UserService {\n\n    private bookshelf: Book[];\n    private bookSub: BehaviorSubject;\n\n    /**\n     * Constructor for UserService.\n     */\n    constructor() {\n        this.bookSub = new BehaviorSubject([]);\n        this.bookshelf = [];\n    }\n\n    /**\n     * Method to get an subscription to the bookshelf.\n     * @returns {Observable}: observable of the users bookshelf\n     */\n    getBookshelf(): Observable {\n        return this.bookSub.asObservable();\n    }\n\n    /**\n     * Sets the bookshelf of the user.\n     * @param {Book[]} books: new bookshelf of the user\n     */\n    setBookshelf(books: Book[]) {\n        this.bookshelf = books;\n        this.bookSub.next(this.bookshelf);\n    }\n\n    /**\n     * Adds a book to the bookshelf of the user.\n     * @param {Book} book: book to be added\n     */\n    addToBookshelf(book: Book) {\n        this.bookshelf.push(book);\n        this.bookSub.next(this.bookshelf);\n    }\n\n    /**\n     * Adds multiple books to the bookshelf of the user.\n     * @param {Book[]} books\n     */\n    addMultToBookshelf(books: Book[]) {\n        this.bookshelf = this.bookshelf.concat(books);\n        this.bookSub.next(this.bookshelf);\n    }\n\n\n    /**\n     * Deletes a book from the bookshelf.\n     * @param {Book} book: book to be deleted\n     */\n    deleteFromBookshelf(book: Book) {\n        this.bookshelf = this.bookshelf.filter(b => b.getMainTitle() !== book.getMainTitle());\n        this.bookSub.next(this.bookshelf);\n    }\n\n    /**\n     * Sets a book that still was being searched to its found values.\n     * @param {Book} book: book that was found.\n     */\n    bookSearchComplete(book: Book) {\n        this.bookshelf[this.bookshelf.findIndex(b => b.isSearched)] = book;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    src/app/auth.config.ts\n            \n            \n                variable\n            \n            \n                authConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/components/bookshelf/bookshelf.component.ts\n            \n            \n                component\n            \n            \n                BookshelfComponent\n            \n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                    src/app/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/components/image-upload/image-upload.component.ts\n            \n            \n                component\n            \n            \n                ImageUploadComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/app/components/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/dataTypes.ts\n            \n            \n                class\n            \n            \n                Book\n            \n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                    src/app/dataTypes.ts\n            \n            \n                class\n            \n            \n                Title\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    src/app/dataTypes.ts\n            \n            \n                interface\n            \n            \n                DetectionResult\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/services/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/services/http/http.service.ts\n            \n            \n                interface\n            \n            \n                Success\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/services/user/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.0\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            angular-oauth2-oidc : ^3.1.4\n        \n            bootstrap : ^4.1.0\n        \n            core-js : ^2.4.1\n        \n            jquery : ^3.3.1\n        \n            rxjs : ^5.5.6\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBookLab\nThis project was generated with Angular CLI version 1.7.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookshelfComponent\n\nBookshelfComponent\n\nAppModule -->\n\nBookshelfComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nImageUploadComponent\n\nImageUploadComponent\n\nAppModule -->\n\nImageUploadComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            0 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authConfig   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authConfig:     AuthConfig\n\n                    \n                \n                    \n                        \n                            Type :     AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // The endpoint that issues the access tokens\n    tokenEndpoint: 'http://localhost:8080/api/auth/token',\n\n    // The SPA's id. The SPA is registered with this id at the auth-server\n    clientId: 'test',\n\n    // The client secret to be send to the server\n    dummyClientSecret: 'test',\n\n    // Set the scopes for the permissions the client should request\n    scope: 'detection',\n\n    // Flag to enable debugging information\n    showDebugInformation: false,\n\n    // Disable OIDC support as it is not supported by the server\n    oidc: false\n}\n                        \n                    \n\n                \n                    \n                        The OAuth 2 authorization configuration for the angular-oauth2-oidc package.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
